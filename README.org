#+title: Arch Linux Installation
#+description: Guide for an Arch Linux install
#+author: Carlos Reyes

* TABLE OF CONTENTS :toc:
- [[#installation][Installation]]
  - [[#disk-formatting][Disk formatting]]
  - [[#mount-and-pacstrap][Mount and Pacstrap]]
  - [[#generating-fstab][Generating Fstab]]
  - [[#localtime-locale-and-extra-config][Localtime, locale and extra config]]
- [[#grub-installation][Grub Installation]]
- [[#post-install][Post install]]
- [[#exit-and-reboot][Exit and Reboot]]

* Installation
#+begin_src bash
timedatectl set-ntp true
timedatectl status
#+end_src
Be careful at this step:
#+begin_src bash
cfdisk
#+end_src
My personal Disk partition:

| Disk | Type             | Capacity |
|------+------------------+----------|
| sda1 | EFI              | 550M     |
| sda2 | Swap             | 4G       |
| sda3 | Linux Filesystem | All      |

** Disk formatting
#+begin_src bash
mkfs.fat -F32 /dev/sda1

mkswap /dev/sda2
swapon /dev/sda2

mkfs.ext4 /dev/sda3
#+end_src
** Mount and Pacstrap
#+begin_src bash
mount /dev/sda3 /mnt
pacstrap /mnt base linux linux-firmware base-devel
#+end_src
** Generating Fstab
#+begin_src bash
genfstab -U /mnt >> /mnt/etc/fstab
#+end_src
Then chroot into the fresh install
#+begin_src bash
arch-chroot /mnt
#+end_src
** Localtime, locale and extra config
I use NeoVim:
#+begin_src bash
pacman -S neovim
#+end_src
Add your own localtime
#+begin_src bash
ln -sf /usr/share/zoneinfo/America/Havana /etc/localtime
#+end_src
#+begin_src bash
hwclock -w
#+end_src
Look for the line #en_US.UTF-8 and uncomment
#+begin_src bash
nvim /etc/locale.gen
#+end_src
#+begin_src bash
locale-gen
#+end_src
Just type your hostname, in my case it's 'arch'
#+begin_src bash
nvim /etc/hostname
#+end_src
#+begin_src bash
nvim /etc/host
#+end_src
Add the next lines to the file, change 'arch' for your username
#+begin_src bash
127.0.0.1   localhost
::1         localhost
127.0.1.1   arch.localdomain    arch
#+end_src
Type your SUDO password
#+begin_src bash
passwd
#+end_src
Create a new user, in my case it's gonne be named 'kr'
#+begin_src bash
useradd -m kr
passwd kr
usermod -aG wheel,audio,video,optical,storage kr
#+end_src
Make sure 'sudo' is installed
#+begin_src bash
pacman -S sudo
#+end_src
Look for the line %wheel ALL=(ALL) ALL and uncomment
#+begin_src bash
EDITOR=nvim visudo
#+end_src
* Grub Installation
This is not a Dual Boot Window's configuration, you will need OS_PROBER to do that
#+begin_src bash
pacman -S grub efibootmgr
mkdir /boot/EFI
grub -install --target=x86_64-efi --bootloader-id=grub_uefi --recheck
grub-mkconfig -o /boot/grub/grub.cfg
#+end_src
* Post install
Make sure NetworkManager is installed and enabled
#+begin_src bash
pacman -S networkmanager
systemctl enable NetworkManager
#+end_src
* Exit and Reboot
#+begin_src bash
exit
umount -R /mnt
reboot
#+end_src
